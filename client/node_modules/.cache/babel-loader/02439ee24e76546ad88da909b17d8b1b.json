{"ast":null,"code":"'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\nconst $internals = Symbol('internals');\nconst $defaults = Symbol('defaults');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while (match = tokensRE.exec(str)) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction matchHeaderValue(context, value, header, filter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n    return char.toUpperCase() + str;\n  });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function (arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n\n  let _key;\n\n  while (i-- > 0) {\n    _key = keys[i];\n\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n\n  return null;\n}\n\nfunction AxiosHeaders(headers, defaults) {\n  headers && this.set(headers);\n  this[$defaults] = defaults || null;\n}\n\nObject.assign(AxiosHeaders.prototype, {\n  set: function (header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = findKey(self, lHeader);\n\n      if (key && _rewrite !== true && (self[key] === false || _rewrite === false)) {\n        return;\n      }\n\n      self[key || _header] = normalizeValue(_value);\n    }\n\n    if (utils.isPlainObject(header)) {\n      utils.forEach(header, (_value, _header) => {\n        setHeader(_value, _header, valueOrRewrite);\n      });\n    } else {\n      setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  },\n  get: function (header, parser) {\n    header = normalizeHeader(header);\n    if (!header) return undefined;\n    const key = findKey(this, header);\n\n    if (key) {\n      const value = this[key];\n\n      if (!parser) {\n        return value;\n      }\n\n      if (parser === true) {\n        return parseTokens(value);\n      }\n\n      if (utils.isFunction(parser)) {\n        return parser.call(this, value, key);\n      }\n\n      if (utils.isRegExp(parser)) {\n        return parser.exec(value);\n      }\n\n      throw new TypeError('parser must be boolean|regexp|function');\n    }\n  },\n  has: function (header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = findKey(this, header);\n      return !!(key && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  },\n  delete: function (header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  },\n  clear: function () {\n    return Object.keys(this).forEach(this.delete.bind(this));\n  },\n  normalize: function (format) {\n    const self = this;\n    const headers = {};\n    utils.forEach(this, (value, header) => {\n      const key = findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n      headers[normalized] = true;\n    });\n    return this;\n  },\n  toJSON: function (asStrings) {\n    const obj = Object.create(null);\n    utils.forEach(Object.assign({}, this[$defaults] || null, this), (value, header) => {\n      if (value == null || value === false) return;\n      obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value;\n    });\n    return obj;\n  }\n});\nObject.assign(AxiosHeaders, {\n  from: function (thing) {\n    if (utils.isString(thing)) {\n      return new this(parseHeaders(thing));\n    }\n\n    return thing instanceof this ? thing : new this(thing);\n  },\n  accessor: function (header) {\n    const internals = this[$internals] = this[$internals] = {\n      accessors: {}\n    };\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n    return this;\n  }\n});\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent']);\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\nexport default AxiosHeaders;","map":{"version":3,"sources":["D:/ipfs/cluster-webui/.yarn/cache/axios-npm-1.1.3-4b63965ac1-cab3b17bf6.zip/node_modules/axios/lib/core/AxiosHeaders.js"],"names":["utils","parseHeaders","$internals","Symbol","$defaults","normalizeHeader","header","String","trim","toLowerCase","normalizeValue","value","isArray","map","parseTokens","str","tokens","Object","create","tokensRE","match","exec","matchHeaderValue","context","filter","isFunction","call","isString","indexOf","isRegExp","test","formatHeader","replace","w","char","toUpperCase","buildAccessors","obj","accessorName","toCamelCase","forEach","methodName","defineProperty","arg1","arg2","arg3","configurable","findKey","key","keys","i","length","_key","AxiosHeaders","headers","defaults","set","assign","prototype","valueOrRewrite","rewrite","self","setHeader","_value","_header","_rewrite","lHeader","Error","isPlainObject","get","parser","undefined","TypeError","has","matcher","delete","deleted","deleteHeader","clear","bind","normalize","format","normalized","toJSON","asStrings","join","from","thing","accessor","internals","accessors","defineAccessor","freezeMethods"],"mappings":"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","sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\nconst $defaults = Symbol('defaults');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction matchHeaderValue(context, value, header, filter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nfunction AxiosHeaders(headers, defaults) {\n  headers && this.set(headers);\n  this[$defaults] = defaults || null;\n}\n\nObject.assign(AxiosHeaders.prototype, {\n  set: function(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = findKey(self, lHeader);\n\n      if (key && _rewrite !== true && (self[key] === false || _rewrite === false)) {\n        return;\n      }\n\n      self[key || _header] = normalizeValue(_value);\n    }\n\n    if (utils.isPlainObject(header)) {\n      utils.forEach(header, (_value, _header) => {\n        setHeader(_value, _header, valueOrRewrite);\n      });\n    } else {\n      setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  },\n\n  get: function(header, parser) {\n    header = normalizeHeader(header);\n\n    if (!header) return undefined;\n\n    const key = findKey(this, header);\n\n    if (key) {\n      const value = this[key];\n\n      if (!parser) {\n        return value;\n      }\n\n      if (parser === true) {\n        return parseTokens(value);\n      }\n\n      if (utils.isFunction(parser)) {\n        return parser.call(this, value, key);\n      }\n\n      if (utils.isRegExp(parser)) {\n        return parser.exec(value);\n      }\n\n      throw new TypeError('parser must be boolean|regexp|function');\n    }\n  },\n\n  has: function(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = findKey(this, header);\n\n      return !!(key && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  },\n\n  delete: function(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  },\n\n  clear: function() {\n    return Object.keys(this).forEach(this.delete.bind(this));\n  },\n\n  normalize: function(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  },\n\n  toJSON: function(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(Object.assign({}, this[$defaults] || null, this),\n      (value, header) => {\n        if (value == null || value === false) return;\n        obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value;\n      });\n\n    return obj;\n  }\n});\n\nObject.assign(AxiosHeaders, {\n  from: function(thing) {\n    if (utils.isString(thing)) {\n      return new this(parseHeaders(thing));\n    }\n    return thing instanceof this ? thing : new this(thing);\n  },\n\n  accessor: function(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n});\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n"]},"metadata":{},"sourceType":"module"}
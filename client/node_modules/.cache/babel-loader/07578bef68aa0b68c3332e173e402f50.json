{"ast":null,"code":"import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nconst adapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n};\nexport default {\n  getAdapter: nameOrAdapter => {\n    if (utils.isString(nameOrAdapter)) {\n      const adapter = adapters[nameOrAdapter];\n\n      if (!nameOrAdapter) {\n        throw Error(utils.hasOwnProp(nameOrAdapter) ? `Adapter '${nameOrAdapter}' is not available in the build` : `Can not resolve adapter '${nameOrAdapter}'`);\n      }\n\n      return adapter;\n    }\n\n    if (!utils.isFunction(nameOrAdapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return nameOrAdapter;\n  },\n  adapters\n};","map":{"version":3,"sources":["D:/ipfs/cluster-webui/.yarn/cache/axios-npm-1.1.3-4b63965ac1-cab3b17bf6.zip/node_modules/axios/lib/adapters/index.js"],"names":["utils","httpAdapter","xhrAdapter","adapters","http","xhr","getAdapter","nameOrAdapter","isString","adapter","Error","hasOwnProp","isFunction","TypeError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAEH,WADS;AAEfI,EAAAA,GAAG,EAAEH;AAFU,CAAjB;AAKA,eAAe;AACbI,EAAAA,UAAU,EAAGC,aAAD,IAAmB;AAC7B,QAAGP,KAAK,CAACQ,QAAN,CAAeD,aAAf,CAAH,EAAiC;AAC/B,YAAME,OAAO,GAAGN,QAAQ,CAACI,aAAD,CAAxB;;AAEA,UAAI,CAACA,aAAL,EAAoB;AAClB,cAAMG,KAAK,CACTV,KAAK,CAACW,UAAN,CAAiBJ,aAAjB,IACG,YAAWA,aAAc,iCAD5B,GAEG,4BAA2BA,aAAc,GAHnC,CAAX;AAKD;;AAED,aAAOE,OAAP;AACD;;AAED,QAAI,CAACT,KAAK,CAACY,UAAN,CAAiBL,aAAjB,CAAL,EAAsC;AACpC,YAAM,IAAIM,SAAJ,CAAc,2BAAd,CAAN;AACD;;AAED,WAAON,aAAP;AACD,GArBY;AAsBbJ,EAAAA;AAtBa,CAAf","sourcesContent":["import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\n\nconst adapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nexport default {\n  getAdapter: (nameOrAdapter) => {\n    if(utils.isString(nameOrAdapter)){\n      const adapter = adapters[nameOrAdapter];\n\n      if (!nameOrAdapter) {\n        throw Error(\n          utils.hasOwnProp(nameOrAdapter) ?\n            `Adapter '${nameOrAdapter}' is not available in the build` :\n            `Can not resolve adapter '${nameOrAdapter}'`\n        );\n      }\n\n      return adapter\n    }\n\n    if (!utils.isFunction(nameOrAdapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return nameOrAdapter;\n  },\n  adapters\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\ipfs\\\\cluster-webui\\\\client\\\\src\\\\components\\\\PinList.tsx\",\n    _s = $RefreshSig$();\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport InfoIcon from '@mui/icons-material/Info';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport { ButtonGroup, Card, CardActions, CardContent, CardHeader, IconButton, Skeleton, Stack, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { useEffect, useState } from 'react';\nimport { useApi } from '../context/ApiContext';\nimport { useLoading } from '../hooks/UseLoading';\nimport { PinDetailPopup } from './PinDetailPopup';\nimport { PinDialog } from './PinDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PinList = props => {\n  _s();\n\n  const [pins, setPins] = useState([]);\n  const [editing, setEditing] = useState();\n  const [detail, setDetail] = useState();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const api = useApi();\n  const [isLoading, load] = useLoading();\n\n  const reload = () => {\n    load(api.getList()).then(r => {\n      setPins(r);\n    }).catch(e => {\n      enqueueSnackbar(`Error: ${e}`, {\n        variant: 'error'\n      });\n    });\n  }; //eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  useEffect(reload, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: 'Pins',\n        subheader: `${isLoading ? '?' : pins.length} pins`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: reload,\n          children: /*#__PURE__*/_jsxDEV(ReplayIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        style: {\n          overflow: 'auto'\n        },\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"rectangular\",\n            width: '100%',\n            height: 35\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"rectangular\",\n            width: '100%',\n            height: 45\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this), pins.map((p, k) => /*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"rectangular\",\n            width: '100%',\n            height: 45\n          }, k, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 27\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          width: '100%',\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Cid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: pins.map((pin, k) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: 'center',\n                children: pin.name && pin.name !== '' ? pin.name : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: pin.cid['/']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  variant: 'outlined',\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => {\n                      setDetail(pin.cid['/']);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => {\n                      setEditing(pin);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: 'error',\n                    onClick: () => {\n                      load(api.remove(pin.cid['/'])).then(() => {\n                        console.log('deleted');\n                        return reload();\n                      }).catch(console.error);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 9\n              }, this)]\n            }, k, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 30\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(PinDialog, {\n      onClose: () => setEditing(undefined),\n      pin: editing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(PinDetailPopup, {\n      onClose: () => setDetail(undefined),\n      cid: detail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PinList, \"ibQPNFmUTQZxWbEU6l1KPBaoSUY=\", false, function () {\n  return [useSnackbar, useApi, useLoading];\n});\n\n_c = PinList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PinList\");","map":{"version":3,"sources":["D:/ipfs/cluster-webui/client/src/components/PinList.tsx"],"names":["DeleteIcon","EditIcon","InfoIcon","ReplayIcon","ButtonGroup","Card","CardActions","CardContent","CardHeader","IconButton","Skeleton","Stack","Table","TableBody","TableCell","TableHead","TableRow","useSnackbar","useEffect","useState","useApi","useLoading","PinDetailPopup","PinDialog","PinList","props","pins","setPins","editing","setEditing","detail","setDetail","enqueueSnackbar","api","isLoading","load","reload","getList","then","r","catch","e","variant","length","overflow","map","p","k","pin","name","cid","remove","console","log","error","undefined"],"mappings":"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","sourcesContent":["import DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport {\r\n\tButtonGroup,\r\n\tCard,\r\n\tCardActions,\r\n\tCardContent,\r\n\tCardHeader,\r\n\tIconButton,\r\n\tSkeleton,\r\n\tStack,\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableHead,\r\n\tTableRow,\r\n} from '@mui/material';\r\nimport {useSnackbar} from 'notistack';\r\nimport {useEffect, useState} from 'react';\r\nimport {useApi} from '../context/ApiContext';\r\nimport {useLoading} from '../hooks/UseLoading';\r\nimport {PinDetailPopup} from './PinDetailPopup';\r\nimport {PinDialog} from './PinDialog';\r\n\r\nexport const PinList = (props: any) => {\r\n\tconst [pins, setPins] = useState<any[]>([]);\r\n\tconst [editing, setEditing] = useState<any>();\r\n\tconst [detail, setDetail] = useState<string>();\r\n\r\n\tconst {enqueueSnackbar} = useSnackbar();\r\n\tconst api = useApi();\r\n\tconst [isLoading, load] = useLoading();\r\n\r\n\tconst reload = () => {\r\n\t\tload(api.getList())\r\n\t\t\t.then(r => {\r\n\t\t\t\tsetPins(r);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tenqueueSnackbar(`Error: ${e}`, {variant: 'error'});\r\n\t\t\t});\r\n\t};\r\n\r\n\t//eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tuseEffect(reload, []);\r\n\r\n\treturn <>\r\n\t\t<Card>\r\n\t\t\t<CardHeader title={'Pins'} subheader={`${isLoading ? '?' : pins.length} pins`}/>\r\n\t\t\t<CardActions>\r\n\t\t\t\t<IconButton onClick={reload}><ReplayIcon/></IconButton>\r\n\t\t\t</CardActions>\r\n\t\t\t<CardContent style={{overflow: 'auto'}}>\r\n\t\t\t\t{isLoading ? <Stack spacing={1}>\r\n\t\t\t\t\t\t<Skeleton variant=\"rectangular\" width={'100%'} height={35}/>\r\n\t\t\t\t\t\t<Skeleton variant=\"rectangular\" width={'100%'} height={45}/>\r\n\t\t\t\t\t\t{pins.map((p, k) => <Skeleton key={k} variant=\"rectangular\" width={'100%'} height={45}/>)}\r\n\t\t\t\t\t</Stack> :\r\n\t\t\t\t\t<Table width={'100%'}>\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>Name</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>Cid</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>Actions</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{pins.map((pin, k) => <TableRow key={k}>\r\n\t\t\t\t\t\t\t\t<TableCell align={'center'}>{pin.name && pin.name !== '' ? pin.name : '-'}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>{pin.cid['/']}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<ButtonGroup variant={'outlined'}>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetDetail(pin.cid['/']);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t><InfoIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetEditing(pin);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t><EditIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\tcolor={'error'}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tload(api.remove(pin.cid['/']))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('deleted');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn reload();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.catch(console.error);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t><DeleteIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>)}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>}\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t\t<PinDialog\r\n\t\t\tonClose={() => setEditing(undefined)}\r\n\t\t\tpin={editing}\r\n\t\t/>\r\n\t\t<PinDetailPopup\r\n\t\t\tonClose={() => setDetail(undefined)}\r\n\t\t\tcid={detail}\r\n\t\t/>\r\n\t</>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
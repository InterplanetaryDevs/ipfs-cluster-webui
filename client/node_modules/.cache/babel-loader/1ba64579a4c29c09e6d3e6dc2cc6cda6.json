{"ast":null,"code":"var _jsxFileName = \"D:\\\\ipfs\\\\cluster-webui\\\\client\\\\src\\\\components\\\\PinForm.tsx\",\n    _s = $RefreshSig$();\n\nimport SaveIcon from '@mui/icons-material/Save';\nimport { Grid, IconButton, TextField } from '@mui/material';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaults = {\n  maxReplication: -1,\n  minReplication: -1,\n  shardSize: 0\n};\nexport const PinForm = props => {\n  _s();\n\n  var _props$values$cid$, _props$values, _props$values$name, _props$values2, _props$values$replica, _props$values3, _props$values$replica2, _props$values4, _props$values$shard_s, _props$values5;\n\n  const [cid, setCid] = useState((_props$values$cid$ = (_props$values = props.values) === null || _props$values === void 0 ? void 0 : _props$values.cid['/']) !== null && _props$values$cid$ !== void 0 ? _props$values$cid$ : '');\n  const [name, setName] = useState((_props$values$name = (_props$values2 = props.values) === null || _props$values2 === void 0 ? void 0 : _props$values2.name) !== null && _props$values$name !== void 0 ? _props$values$name : '');\n  const [maxReplication, setMaxReplication] = useState(((_props$values$replica = (_props$values3 = props.values) === null || _props$values3 === void 0 ? void 0 : _props$values3.replication_factor_max) !== null && _props$values$replica !== void 0 ? _props$values$replica : defaults.maxReplication).toString());\n  const [minReplication, setMinReplication] = useState(((_props$values$replica2 = (_props$values4 = props.values) === null || _props$values4 === void 0 ? void 0 : _props$values4.replication_factor_min) !== null && _props$values$replica2 !== void 0 ? _props$values$replica2 : defaults.minReplication).toString());\n  const [shardSize, setShardSize] = useState(((_props$values$shard_s = (_props$values5 = props.values) === null || _props$values5 === void 0 ? void 0 : _props$values5.shard_size) !== null && _props$values$shard_s !== void 0 ? _props$values$shard_s : defaults.shardSize).toString());\n\n  const submit = () => {\n    var _parseInt, _parseInt2, _parseInt3;\n\n    props.onSubmit({\n      cid: cid,\n      name: name,\n      maxReplication: (_parseInt = parseInt(maxReplication)) !== null && _parseInt !== void 0 ? _parseInt : defaults.maxReplication,\n      minReplication: (_parseInt2 = parseInt(minReplication)) !== null && _parseInt2 !== void 0 ? _parseInt2 : defaults.minReplication,\n      shardSize: (_parseInt3 = parseInt(shardSize)) !== null && _parseInt3 !== void 0 ? _parseInt3 : defaults.shardSize\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        value: cid,\n        onChange: e => setCid(e.target.value),\n        label: 'Cid*',\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        value: name,\n        onChange: e => setName(e.target.value),\n        label: 'Name',\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      lg: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        value: maxReplication,\n        onChange: e => setMaxReplication(e.target.value),\n        label: 'Max replication',\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      lg: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        value: minReplication,\n        onChange: e => setMinReplication(e.target.value),\n        label: 'Min replication',\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      lg: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        value: shardSize,\n        onChange: e => setShardSize(e.target.value),\n        label: 'Shard Size',\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: submit,\n        children: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PinForm, \"8XqqZjUb0IUUGektCRdEOVZkN+w=\");\n\n_c = PinForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PinForm\");","map":{"version":3,"sources":["D:/ipfs/cluster-webui/client/src/components/PinForm.tsx"],"names":["SaveIcon","Grid","IconButton","TextField","useState","defaults","maxReplication","minReplication","shardSize","PinForm","props","cid","setCid","values","name","setName","setMaxReplication","replication_factor_max","toString","setMinReplication","replication_factor_min","setShardSize","shard_size","submit","onSubmit","parseInt","e","target","value"],"mappings":"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","sourcesContent":["import SaveIcon from '@mui/icons-material/Save';\r\nimport {Grid, IconButton, TextField} from '@mui/material';\r\nimport {useState} from 'react';\r\nimport {PinOptions} from '../types/PinOptions';\r\nimport {PinType} from '../types/PinType';\r\n\r\nexport interface PinFormProps {\r\n\tonSubmit: (pin: PinOptions & { cid: string }) => void;\r\n\tvalues?: PinType;\r\n}\r\n\r\nconst defaults = {\r\n\tmaxReplication: -1,\r\n\tminReplication: -1,\r\n\tshardSize: 0,\r\n}\r\n\r\nexport const PinForm = (props: PinFormProps) => {\r\n\tconst [cid, setCid] = useState(props.values?.cid['/'] ?? '');\r\n\tconst [name, setName] = useState(props.values?.name ?? '');\r\n\tconst [maxReplication, setMaxReplication] = useState((props.values?.replication_factor_max ?? defaults.maxReplication).toString());\r\n\tconst [minReplication, setMinReplication] = useState((props.values?.replication_factor_min ?? defaults.minReplication).toString());\r\n\tconst [shardSize, setShardSize] = useState((props.values?.shard_size ?? defaults.shardSize).toString());\r\n\r\n\tconst submit = () => {\r\n\t\tprops.onSubmit({\r\n\t\t\tcid: cid,\r\n\t\t\tname: name,\r\n\t\t\tmaxReplication: parseInt(maxReplication) ?? defaults.maxReplication,\r\n\t\t\tminReplication: parseInt(minReplication) ?? defaults.minReplication,\r\n\t\t\tshardSize: parseInt(shardSize) ?? defaults.shardSize,\r\n\t\t});\r\n\t};\r\n\r\n\r\n\treturn <Grid container spacing={3}>\r\n\t\t<Grid item xs={12}>\r\n\t\t\t<TextField\r\n\t\t\t\tvalue={cid}\r\n\t\t\t\tonChange={(e) => setCid(e.target.value)}\r\n\t\t\t\tlabel={'Cid*'}\r\n\t\t\t\tfullWidth={true}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t\t<Grid item xs={12}>\r\n\t\t\t<TextField\r\n\t\t\t\tvalue={name}\r\n\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\tlabel={'Name'}\r\n\t\t\t\tfullWidth={true}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t\t<Grid item xs={12} lg={6}>\r\n\t\t\t<TextField\r\n\t\t\t\tvalue={maxReplication}\r\n\t\t\t\tonChange={(e) => setMaxReplication(e.target.value)}\r\n\t\t\t\tlabel={'Max replication'}\r\n\t\t\t\tfullWidth={true}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t\t<Grid item xs={12} lg={6}>\r\n\t\t\t<TextField\r\n\t\t\t\tvalue={minReplication}\r\n\t\t\t\tonChange={(e) => setMinReplication(e.target.value)}\r\n\t\t\t\tlabel={'Min replication'}\r\n\t\t\t\tfullWidth={true}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t\t<Grid item xs={12} lg={6}>\r\n\t\t\t<TextField\r\n\t\t\t\tvalue={shardSize}\r\n\t\t\t\tonChange={(e) => setShardSize(e.target.value)}\r\n\t\t\t\tlabel={'Shard Size'}\r\n\t\t\t\tfullWidth={true}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t\t<Grid item xs={12}>\r\n\t\t\t<IconButton onClick={submit}><SaveIcon/></IconButton>\r\n\t\t</Grid>\r\n\t</Grid>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
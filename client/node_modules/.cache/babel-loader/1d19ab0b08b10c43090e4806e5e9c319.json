{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"component\", \"disabled\", \"slotProps\", \"slots\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport { getOptionGroupUnstyledUtilityClass } from './optionGroupUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(disabled) {\n  const slots = {\n    root: ['root', disabled && 'disabled'],\n    label: ['label'],\n    list: ['list']\n  };\n  return composeClasses(slots, getOptionGroupUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option group to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Unstyled Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionGroupUnstyled API](https://mui.com/base/api/option-group-unstyled/)\n */\n\n\nconst OptionGroupUnstyled = /*#__PURE__*/React.forwardRef(function OptionGroupUnstyled(props, ref) {\n  const {\n    component,\n    disabled = false,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const Root = component || (slots == null ? void 0 : slots.root) || 'li';\n  const Label = (slots == null ? void 0 : slots.label) || 'span';\n  const List = (slots == null ? void 0 : slots.list) || 'ul';\n  const classes = useUtilityClasses(disabled);\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref\n    },\n    ownerState: props,\n    className: classes.root\n  });\n  const labelProps = useSlotProps({\n    elementType: Label,\n    externalSlotProps: slotProps.label,\n    ownerState: props,\n    className: classes.label\n  });\n  const listProps = useSlotProps({\n    elementType: List,\n    externalSlotProps: slotProps.list,\n    ownerState: props,\n    className: classes.list\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsx(Label, _extends({}, labelProps, {\n      children: props.label\n    })), /*#__PURE__*/_jsx(List, _extends({}, listProps, {\n      children: props.children\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionGroupUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true` all the options in the group will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The human-readable description of the group.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the OptionGroupUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    label: PropTypes.elementType,\n    list: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default OptionGroupUnstyled;","map":{"version":3,"sources":["D:/ipfs/cluster-webui/.yarn/__virtual__/@mui-base-virtual-988448c64e/0/cache/@mui-base-npm-5.0.0-alpha.103-53af3ff7f9-beabe1be30.zip/node_modules/@mui/base/OptionGroupUnstyled/OptionGroupUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","composeClasses","getOptionGroupUnstyledUtilityClass","useSlotProps","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","disabled","slots","root","label","list","OptionGroupUnstyled","forwardRef","props","ref","component","slotProps","other","Root","Label","List","classes","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ownerState","className","labelProps","listProps","children","process","env","NODE_ENV","propTypes","node","bool","shape","oneOfType","func","object"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"component\", \"disabled\", \"slotProps\", \"slots\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport { getOptionGroupUnstyledUtilityClass } from './optionGroupUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(disabled) {\n  const slots = {\n    root: ['root', disabled && 'disabled'],\n    label: ['label'],\n    list: ['list']\n  };\n  return composeClasses(slots, getOptionGroupUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option group to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Unstyled Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionGroupUnstyled API](https://mui.com/base/api/option-group-unstyled/)\n */\n\n\nconst OptionGroupUnstyled = /*#__PURE__*/React.forwardRef(function OptionGroupUnstyled(props, ref) {\n  const {\n    component,\n    disabled = false,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const Root = component || (slots == null ? void 0 : slots.root) || 'li';\n  const Label = (slots == null ? void 0 : slots.label) || 'span';\n  const List = (slots == null ? void 0 : slots.list) || 'ul';\n  const classes = useUtilityClasses(disabled);\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref\n    },\n    ownerState: props,\n    className: classes.root\n  });\n  const labelProps = useSlotProps({\n    elementType: Label,\n    externalSlotProps: slotProps.label,\n    ownerState: props,\n    className: classes.label\n  });\n  const listProps = useSlotProps({\n    elementType: List,\n    externalSlotProps: slotProps.list,\n    ownerState: props,\n    className: classes.list\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsx(Label, _extends({}, labelProps, {\n      children: props.label\n    })), /*#__PURE__*/_jsx(List, _extends({}, listProps, {\n      children: props.children\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionGroupUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true` all the options in the group will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The human-readable description of the group.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the OptionGroupUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    label: PropTypes.elementType,\n    list: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default OptionGroupUnstyled;"]},"metadata":{},"sourceType":"module"}
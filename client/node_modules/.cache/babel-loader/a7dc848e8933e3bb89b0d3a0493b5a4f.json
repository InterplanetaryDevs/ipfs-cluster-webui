{"ast":null,"code":"var _jsxFileName = \"D:\\\\ipfs\\\\cluster-webui\\\\client\\\\src\\\\components\\\\PinDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport { Dialog, DialogContent, DialogTitle } from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { useApi } from '../context/ApiContext';\nimport { PinForm } from './PinForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PinDialog = props => {\n  _s();\n\n  var _props$pin2;\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const api = useApi();\n\n  const updatePin = pin => {\n    var _props$pin;\n\n    const {\n      cid,\n      ...pinOptions\n    } = pin;\n    api.update((_props$pin = props.pin) === null || _props$pin === void 0 ? void 0 : _props$pin.cid['/'], cid, pinOptions).then(r => {\n      props.onClose && props.onClose();\n      enqueueSnackbar(`Pin updated`, {\n        variant: 'success'\n      });\n    }).catch(e => {\n      enqueueSnackbar(`Error: ${e}`, {\n        variant: 'error'\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: !!props.pin,\n    onClose: props.onClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit Pin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [\"Editing \", (_props$pin2 = props.pin) === null || _props$pin2 === void 0 ? void 0 : _props$pin2.cid['/'], /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 17\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(PinForm, {\n        values: props.pin,\n        onSubmit: pin => {\n          updatePin(pin);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PinDialog, \"Hjfbu3bfU2BJleeBPh3nO5NsBCk=\", false, function () {\n  return [useSnackbar, useApi];\n});\n\n_c = PinDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"PinDialog\");","map":{"version":3,"sources":["D:/ipfs/cluster-webui/client/src/components/PinDialog.tsx"],"names":["Dialog","DialogContent","DialogTitle","useSnackbar","useApi","PinForm","PinDialog","props","enqueueSnackbar","api","updatePin","pin","cid","pinOptions","update","then","r","onClose","variant","catch","e","height"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,aAAhB,EAA+BC,WAA/B,QAAiD,eAAjD;AACA,SAAQC,WAAR,QAA0B,WAA1B;AACA,SAAQC,MAAR,QAAqB,uBAArB;AAEA,SAAQC,OAAR,QAAsB,WAAtB;;AAOA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAA2B;AAAA;;AAAA;;AACnD,QAAM;AAACC,IAAAA;AAAD,MAAoBL,WAAW,EAArC;AACA,QAAMM,GAAG,GAAGL,MAAM,EAAlB;;AAEA,QAAMM,SAAS,GAAIC,GAAD,IAAc;AAAA;;AAC/B,UAAM;AAACC,MAAAA,GAAD;AAAM,SAAGC;AAAT,QAAuBF,GAA7B;AACAF,IAAAA,GAAG,CAACK,MAAJ,eAAWP,KAAK,CAACI,GAAjB,+CAAW,WAAWC,GAAX,CAAe,GAAf,CAAX,EAAgCA,GAAhC,EAAqCC,UAArC,EACEE,IADF,CACOC,CAAC,IAAI;AACVT,MAAAA,KAAK,CAACU,OAAN,IAAiBV,KAAK,CAACU,OAAN,EAAjB;AACAT,MAAAA,eAAe,CAAE,aAAF,EAAgB;AAACU,QAAAA,OAAO,EAAE;AAAV,OAAhB,CAAf;AACA,KAJF,EAKEC,KALF,CAKQC,CAAC,IAAI;AACXZ,MAAAA,eAAe,CAAE,UAASY,CAAE,EAAb,EAAgB;AAACF,QAAAA,OAAO,EAAE;AAAV,OAAhB,CAAf;AACA,KAPF;AAQA,GAVD;;AAYA,sBAAO,QAAC,MAAD;AACN,IAAA,IAAI,EAAE,CAAC,CAACX,KAAK,CAACI,GADR;AAEN,IAAA,OAAO,EAAEJ,KAAK,CAACU,OAFT;AAAA,4BAIN,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJM,eAKN,QAAC,aAAD;AAAA,4CACUV,KAAK,CAACI,GADhB,gDACU,YAAWC,GAAX,CAAe,GAAf,CADV,eAEC;AAAK,QAAA,KAAK,EAAE;AAACS,UAAAA,MAAM,EAAE;AAAT;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC,QAAC,OAAD;AACC,QAAA,MAAM,EAAEd,KAAK,CAACI,GADf;AAEC,QAAA,QAAQ,EAAGA,GAAD,IAAS;AAClBD,UAAAA,SAAS,CAACC,GAAD,CAAT;AACA;AAJF;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YALM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAgBA,CAhCM;;GAAML,S;UACcH,W,EACdC,M;;;KAFAE,S","sourcesContent":["import {Dialog, DialogContent, DialogTitle} from '@mui/material';\r\nimport {useSnackbar} from 'notistack';\r\nimport {useApi} from '../context/ApiContext';\r\nimport {PinType} from '../types/PinType';\r\nimport {PinForm} from './PinForm';\r\n\r\nexport interface PinDialogProps {\r\n\tpin?: PinType;\r\n\tonClose?: () => void;\r\n}\r\n\r\nexport const PinDialog = (props: PinDialogProps) => {\r\n\tconst {enqueueSnackbar} = useSnackbar();\r\n\tconst api = useApi()\r\n\r\n\tconst updatePin = (pin: any) => {\r\n\t\tconst {cid, ...pinOptions} = pin;\r\n\t\tapi.update(props.pin?.cid['/'], cid, pinOptions)\r\n\t\t\t.then(r => {\r\n\t\t\t\tprops.onClose && props.onClose();\r\n\t\t\t\tenqueueSnackbar(`Pin updated`, {variant: 'success'})\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tenqueueSnackbar(`Error: ${e}`, {variant: 'error'})\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn <Dialog\r\n\t\topen={!!props.pin}\r\n\t\tonClose={props.onClose}\r\n\t>\r\n\t\t<DialogTitle>Edit Pin</DialogTitle>\r\n\t\t<DialogContent>\r\n\t\t\tEditing {props.pin?.cid['/']}\r\n\t\t\t<div style={{height: 17}}/>\r\n\t\t\t<PinForm\r\n\t\t\t\tvalues={props.pin}\r\n\t\t\t\tonSubmit={(pin) => {\r\n\t\t\t\t\tupdatePin(pin);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</DialogContent>\r\n\t</Dialog>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
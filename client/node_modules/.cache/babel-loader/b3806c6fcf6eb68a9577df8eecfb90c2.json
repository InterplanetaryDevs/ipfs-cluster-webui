{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"checked\", \"component\", \"defaultChecked\", \"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport useSwitch from './useSwitch';\nimport { getSwitchUnstyledUtilityClass } from './switchUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', readOnly && 'readOnly'],\n    thumb: ['thumb'],\n    input: ['input'],\n    track: ['track']\n  };\n  return composeClasses(slots, getSwitchUnstyledUtilityClass, {});\n};\n/**\n * The foundation for building custom-styled switches.\n *\n * Demos:\n *\n * - [Unstyled Switch](https://mui.com/base/react-switch/)\n *\n * API:\n *\n * - [SwitchUnstyled API](https://mui.com/base/api/switch-unstyled/)\n */\n\n\nconst SwitchUnstyled = /*#__PURE__*/React.forwardRef(function SwitchUnstyled(props, ref) {\n  var _ref, _slots$thumb, _slots$input, _slots$track;\n\n  const {\n    checked: checkedProp,\n    component,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly: readOnlyProp,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const useSwitchProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly: readOnlyProp\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = useSwitch(useSwitchProps);\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Thumb = (_slots$thumb = slots.thumb) != null ? _slots$thumb : 'span';\n  const thumbProps = useSlotProps({\n    elementType: Thumb,\n    externalSlotProps: slotProps.thumb,\n    ownerState,\n    className: classes.thumb\n  });\n  const Input = (_slots$input = slots.input) != null ? _slots$input : 'input';\n  const inputProps = useSlotProps({\n    elementType: Input,\n    getSlotProps: getInputProps,\n    externalSlotProps: slotProps.input,\n    ownerState,\n    className: classes.input\n  });\n  const Track = slots.track === null ? () => null : (_slots$track = slots.track) != null ? _slots$track : 'span';\n  const trackProps = useSlotProps({\n    elementType: Track,\n    externalSlotProps: slotProps.track,\n    ownerState,\n    className: classes.track\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsx(Track, _extends({}, trackProps)), /*#__PURE__*/_jsx(Thumb, _extends({}, thumbProps)), /*#__PURE__*/_jsx(Input, _extends({}, inputProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwitchUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside the Switch.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    thumb: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    track: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Switch.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType,\n    thumb: PropTypes.elementType,\n    track: PropTypes.oneOfType([PropTypes.elementType, PropTypes.oneOf([null])])\n  })\n} : void 0;\nexport default SwitchUnstyled;","map":{"version":3,"sources":["D:/ipfs/cluster-webui/.yarn/__virtual__/@mui-base-virtual-988448c64e/0/cache/@mui-base-npm-5.0.0-alpha.103-53af3ff7f9-beabe1be30.zip/node_modules/@mui/base/SwitchUnstyled/SwitchUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","composeClasses","useSwitch","getSwitchUnstyledUtilityClass","useSlotProps","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","checked","disabled","focusVisible","readOnly","slots","root","thumb","input","track","SwitchUnstyled","forwardRef","props","ref","_ref","_slots$thumb","_slots$input","_slots$track","checkedProp","component","defaultChecked","disabledProp","onBlur","onChange","onFocus","onFocusVisible","readOnlyProp","slotProps","other","useSwitchProps","getInputProps","classes","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","className","Thumb","thumbProps","Input","inputProps","getSlotProps","Track","trackProps","children","process","env","NODE_ENV","propTypes","bool","node","func","required","shape","oneOfType","object","oneOf"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,gBAAzB,EAA2C,UAA3C,EAAuD,QAAvD,EAAiE,UAAjE,EAA6E,SAA7E,EAAwF,gBAAxF,EAA0G,UAA1G,EAAsH,UAAtH,EAAkI,WAAlI,EAA+I,OAA/I,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,6BAAT,QAA8C,yBAA9C;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AAEA,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;AACtC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA;AAJI,MAKFJ,UALJ;AAMA,QAAMK,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASL,OAAO,IAAI,SAApB,EAA+BC,QAAQ,IAAI,UAA3C,EAAuDC,YAAY,IAAI,cAAvE,EAAuFC,QAAQ,IAAI,UAAnG,CADM;AAEZG,IAAAA,KAAK,EAAE,CAAC,OAAD,CAFK;AAGZC,IAAAA,KAAK,EAAE,CAAC,OAAD,CAHK;AAIZC,IAAAA,KAAK,EAAE,CAAC,OAAD;AAJK,GAAd;AAMA,SAAOlB,cAAc,CAACc,KAAD,EAAQZ,6BAAR,EAAuC,EAAvC,CAArB;AACD,CAdD;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMiB,cAAc,GAAG,aAAarB,KAAK,CAACsB,UAAN,CAAiB,SAASD,cAAT,CAAwBE,KAAxB,EAA+BC,GAA/B,EAAoC;AACvF,MAAIC,IAAJ,EAAUC,YAAV,EAAwBC,YAAxB,EAAsCC,YAAtC;;AAEA,QAAM;AACJhB,IAAAA,OAAO,EAAEiB,WADL;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,cAHI;AAIJlB,IAAAA,QAAQ,EAAEmB,YAJN;AAKJC,IAAAA,MALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,OAPI;AAQJC,IAAAA,cARI;AASJrB,IAAAA,QAAQ,EAAEsB,YATN;AAUJC,IAAAA,SAAS,GAAG,EAVR;AAWJtB,IAAAA,KAAK,GAAG;AAXJ,MAYFO,KAZJ;AAAA,QAaMgB,KAAK,GAAGzC,6BAA6B,CAACyB,KAAD,EAAQxB,SAAR,CAb3C;;AAeA,QAAMyC,cAAc,GAAG;AACrB5B,IAAAA,OAAO,EAAEiB,WADY;AAErBE,IAAAA,cAFqB;AAGrBlB,IAAAA,QAAQ,EAAEmB,YAHW;AAIrBC,IAAAA,MAJqB;AAKrBC,IAAAA,QALqB;AAMrBC,IAAAA,OANqB;AAOrBC,IAAAA,cAPqB;AAQrBrB,IAAAA,QAAQ,EAAEsB;AARW,GAAvB;AAUA,QAAM;AACJI,IAAAA,aADI;AAEJ7B,IAAAA,OAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA;AALI,MAMFZ,SAAS,CAACqC,cAAD,CANb;;AAQA,QAAM7B,UAAU,GAAGd,QAAQ,CAAC,EAAD,EAAK0B,KAAL,EAAY;AACrCX,IAAAA,OADqC;AAErCC,IAAAA,QAFqC;AAGrCC,IAAAA,YAHqC;AAIrCC,IAAAA;AAJqC,GAAZ,CAA3B;;AAOA,QAAM2B,OAAO,GAAGhC,iBAAiB,CAACC,UAAD,CAAjC;AACA,QAAMgC,IAAI,GAAG,CAAClB,IAAI,GAAGK,SAAS,IAAI,IAAb,GAAoBA,SAApB,GAAgCd,KAAK,CAACC,IAA9C,KAAuD,IAAvD,GAA8DQ,IAA9D,GAAqE,MAAlF;AACA,QAAMmB,SAAS,GAAGvC,YAAY,CAAC;AAC7BwC,IAAAA,WAAW,EAAEF,IADgB;AAE7BG,IAAAA,iBAAiB,EAAER,SAAS,CAACrB,IAFA;AAG7B8B,IAAAA,sBAAsB,EAAER,KAHK;AAI7BS,IAAAA,eAAe,EAAE;AACfxB,MAAAA;AADe,KAJY;AAO7Bb,IAAAA,UAP6B;AAQ7BsC,IAAAA,SAAS,EAAEP,OAAO,CAACzB;AARU,GAAD,CAA9B;AAUA,QAAMiC,KAAK,GAAG,CAACxB,YAAY,GAAGV,KAAK,CAACE,KAAtB,KAAgC,IAAhC,GAAuCQ,YAAvC,GAAsD,MAApE;AACA,QAAMyB,UAAU,GAAG9C,YAAY,CAAC;AAC9BwC,IAAAA,WAAW,EAAEK,KADiB;AAE9BJ,IAAAA,iBAAiB,EAAER,SAAS,CAACpB,KAFC;AAG9BP,IAAAA,UAH8B;AAI9BsC,IAAAA,SAAS,EAAEP,OAAO,CAACxB;AAJW,GAAD,CAA/B;AAMA,QAAMkC,KAAK,GAAG,CAACzB,YAAY,GAAGX,KAAK,CAACG,KAAtB,KAAgC,IAAhC,GAAuCQ,YAAvC,GAAsD,OAApE;AACA,QAAM0B,UAAU,GAAGhD,YAAY,CAAC;AAC9BwC,IAAAA,WAAW,EAAEO,KADiB;AAE9BE,IAAAA,YAAY,EAAEb,aAFgB;AAG9BK,IAAAA,iBAAiB,EAAER,SAAS,CAACnB,KAHC;AAI9BR,IAAAA,UAJ8B;AAK9BsC,IAAAA,SAAS,EAAEP,OAAO,CAACvB;AALW,GAAD,CAA/B;AAOA,QAAMoC,KAAK,GAAGvC,KAAK,CAACI,KAAN,KAAgB,IAAhB,GAAuB,MAAM,IAA7B,GAAoC,CAACQ,YAAY,GAAGZ,KAAK,CAACI,KAAtB,KAAgC,IAAhC,GAAuCQ,YAAvC,GAAsD,MAAxG;AACA,QAAM4B,UAAU,GAAGnD,YAAY,CAAC;AAC9BwC,IAAAA,WAAW,EAAEU,KADiB;AAE9BT,IAAAA,iBAAiB,EAAER,SAAS,CAAClB,KAFC;AAG9BT,IAAAA,UAH8B;AAI9BsC,IAAAA,SAAS,EAAEP,OAAO,CAACtB;AAJW,GAAD,CAA/B;AAMA,SAAO,aAAaX,KAAK,CAACkC,IAAD,EAAO9C,QAAQ,CAAC,EAAD,EAAK+C,SAAL,EAAgB;AACtDa,IAAAA,QAAQ,EAAE,CAAC,aAAalD,IAAI,CAACgD,KAAD,EAAQ1D,QAAQ,CAAC,EAAD,EAAK2D,UAAL,CAAhB,CAAlB,EAAqD,aAAajD,IAAI,CAAC2C,KAAD,EAAQrD,QAAQ,CAAC,EAAD,EAAKsD,UAAL,CAAhB,CAAtE,EAAyG,aAAa5C,IAAI,CAAC6C,KAAD,EAAQvD,QAAQ,CAAC,EAAD,EAAKwD,UAAL,CAAhB,CAA1H;AAD4C,GAAhB,CAAf,CAAzB;AAGD,CAhFmC,CAApC;AAiFAK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvC,cAAc,CAACwC;AACvD;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEjD,EAAAA,OAAO,EAAEX,SAAS,CAAC6D,IATnB;;AAWA;AACF;AACA;AACEL,EAAAA,QAAQ,EAAExD,SAAS,CAAC8D,IAdpB;;AAgBA;AACF;AACA;AACA;AACEjC,EAAAA,SAAS,EAAE7B,SAAS,CAAC4C,WApBrB;;AAsBA;AACF;AACA;AACEd,EAAAA,cAAc,EAAE9B,SAAS,CAAC6D,IAzB1B;;AA2BA;AACF;AACA;AACEjD,EAAAA,QAAQ,EAAEZ,SAAS,CAAC6D,IA9BpB;;AAgCA;AACF;AACA;AACE7B,EAAAA,MAAM,EAAEhC,SAAS,CAAC+D,IAnClB;;AAqCA;AACF;AACA;AACA;AACA;AACA;AACA;AACE9B,EAAAA,QAAQ,EAAEjC,SAAS,CAAC+D,IA5CpB;;AA8CA;AACF;AACA;AACE7B,EAAAA,OAAO,EAAElC,SAAS,CAAC+D,IAjDnB;;AAmDA;AACF;AACA;AACE5B,EAAAA,cAAc,EAAEnC,SAAS,CAAC+D,IAtD1B;;AAwDA;AACF;AACA;AACEjD,EAAAA,QAAQ,EAAEd,SAAS,CAAC6D,IA3DpB;;AA6DA;AACF;AACA;AACEG,EAAAA,QAAQ,EAAEhE,SAAS,CAAC6D,IAhEpB;;AAkEA;AACF;AACA;AACA;AACExB,EAAAA,SAAS,EAAErC,SAAS,CAACiE,KAAV,CAAgB;AACzB/C,IAAAA,KAAK,EAAElB,SAAS,CAACkE,SAAV,CAAoB,CAAClE,SAAS,CAAC+D,IAAX,EAAiB/D,SAAS,CAACmE,MAA3B,CAApB,CADkB;AAEzBnD,IAAAA,IAAI,EAAEhB,SAAS,CAACkE,SAAV,CAAoB,CAAClE,SAAS,CAAC+D,IAAX,EAAiB/D,SAAS,CAACmE,MAA3B,CAApB,CAFmB;AAGzBlD,IAAAA,KAAK,EAAEjB,SAAS,CAACkE,SAAV,CAAoB,CAAClE,SAAS,CAAC+D,IAAX,EAAiB/D,SAAS,CAACmE,MAA3B,CAApB,CAHkB;AAIzBhD,IAAAA,KAAK,EAAEnB,SAAS,CAACkE,SAAV,CAAoB,CAAClE,SAAS,CAAC+D,IAAX,EAAiB/D,SAAS,CAACmE,MAA3B,CAApB;AAJkB,GAAhB,CAtEX;;AA6EA;AACF;AACA;AACA;AACA;AACEpD,EAAAA,KAAK,EAAEf;AACP;AADgB,GAEfiE,KAFM,CAEA;AACL/C,IAAAA,KAAK,EAAElB,SAAS,CAAC4C,WADZ;AAEL5B,IAAAA,IAAI,EAAEhB,SAAS,CAAC4C,WAFX;AAGL3B,IAAAA,KAAK,EAAEjB,SAAS,CAAC4C,WAHZ;AAILzB,IAAAA,KAAK,EAAEnB,SAAS,CAACkE,SAAV,CAAoB,CAAClE,SAAS,CAAC4C,WAAX,EAAwB5C,SAAS,CAACoE,KAAV,CAAgB,CAAC,IAAD,CAAhB,CAAxB,CAApB;AAJF,GAFA;AAlFP,CAFF,GA4FI,KAAK,CA5FT;AA6FA,eAAehD,cAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"checked\", \"component\", \"defaultChecked\", \"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport useSwitch from './useSwitch';\nimport { getSwitchUnstyledUtilityClass } from './switchUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', readOnly && 'readOnly'],\n    thumb: ['thumb'],\n    input: ['input'],\n    track: ['track']\n  };\n  return composeClasses(slots, getSwitchUnstyledUtilityClass, {});\n};\n/**\n * The foundation for building custom-styled switches.\n *\n * Demos:\n *\n * - [Unstyled Switch](https://mui.com/base/react-switch/)\n *\n * API:\n *\n * - [SwitchUnstyled API](https://mui.com/base/api/switch-unstyled/)\n */\n\n\nconst SwitchUnstyled = /*#__PURE__*/React.forwardRef(function SwitchUnstyled(props, ref) {\n  var _ref, _slots$thumb, _slots$input, _slots$track;\n\n  const {\n    checked: checkedProp,\n    component,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly: readOnlyProp,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const useSwitchProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly: readOnlyProp\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = useSwitch(useSwitchProps);\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Thumb = (_slots$thumb = slots.thumb) != null ? _slots$thumb : 'span';\n  const thumbProps = useSlotProps({\n    elementType: Thumb,\n    externalSlotProps: slotProps.thumb,\n    ownerState,\n    className: classes.thumb\n  });\n  const Input = (_slots$input = slots.input) != null ? _slots$input : 'input';\n  const inputProps = useSlotProps({\n    elementType: Input,\n    getSlotProps: getInputProps,\n    externalSlotProps: slotProps.input,\n    ownerState,\n    className: classes.input\n  });\n  const Track = slots.track === null ? () => null : (_slots$track = slots.track) != null ? _slots$track : 'span';\n  const trackProps = useSlotProps({\n    elementType: Track,\n    externalSlotProps: slotProps.track,\n    ownerState,\n    className: classes.track\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsx(Track, _extends({}, trackProps)), /*#__PURE__*/_jsx(Thumb, _extends({}, thumbProps)), /*#__PURE__*/_jsx(Input, _extends({}, inputProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwitchUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside the Switch.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    thumb: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    track: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Switch.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType,\n    thumb: PropTypes.elementType,\n    track: PropTypes.oneOfType([PropTypes.elementType, PropTypes.oneOf([null])])\n  })\n} : void 0;\nexport default SwitchUnstyled;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"invisible\", \"max\", \"slotProps\", \"slots\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n/**\n *\n * Demos:\n *\n * - [Unstyled badge](https://mui.com/base/react-badge/)\n *\n * API:\n *\n * - [BadgeUnstyled API](https://mui.com/base/api/badge-unstyled/)\n */\n\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    component,\n    children,\n    max: maxProp = 99,\n    slotProps = {},\n    slots = {},\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || slots.root || 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Badge = slots.badge || 'span';\n  const badgeProps = useSlotProps({\n    elementType: Badge,\n    externalSlotProps: slotProps.badge,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default BadgeUnstyled;","map":{"version":3,"sources":["D:/ipfs/cluster-webui/.yarn/__virtual__/@mui-base-virtual-988448c64e/0/cache/@mui-base-npm-5.0.0-alpha.103-53af3ff7f9-beabe1be30.zip/node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","composeClasses","useBadge","getBadgeUnstyledUtilityClass","useSlotProps","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","invisible","slots","root","badge","undefined","BadgeUnstyled","forwardRef","props","ref","component","children","max","maxProp","slotProps","showZero","other","badgeContent","displayValue","classes","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","className","Badge","badgeProps","process","env","NODE_ENV","propTypes","node","bool","number","shape","oneOfType","func","object"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"invisible\", \"max\", \"slotProps\", \"slots\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n/**\n *\n * Demos:\n *\n * - [Unstyled badge](https://mui.com/base/react-badge/)\n *\n * API:\n *\n * - [BadgeUnstyled API](https://mui.com/base/api/badge-unstyled/)\n */\n\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    component,\n    children,\n    max: maxProp = 99,\n    slotProps = {},\n    slots = {},\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || slots.root || 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Badge = slots.badge || 'span';\n  const badgeProps = useSlotProps({\n    elementType: Badge,\n    externalSlotProps: slotProps.badge,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default BadgeUnstyled;"]},"metadata":{},"sourceType":"module"}
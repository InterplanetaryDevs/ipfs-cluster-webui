{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"classes\", \"closeAfterTransition\", \"component\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport FocusTrap from '../FocusTrap';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  var _props$ariaHidden, _ref;\n\n  const {\n    children,\n    classes: classesProp,\n    closeAfterTransition = false,\n    component,\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    // eslint-disable-next-line react/prop-types\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open,\n\n    /* eslint-disable react/prop-types */\n    onTransitionEnter,\n    onTransitionExited,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleEnter = () => {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: handleRef,\n      role: 'presentation',\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState\n  });\n  const BackdropComponent = slots.backdrop;\n  const backdropProps = useSlotProps({\n    elementType: BackdropComponent,\n    externalSlotProps: slotProps.backdrop,\n    additionalProps: {\n      'aria-hidden': true,\n      onClick: handleBackdropClick,\n      open\n    },\n    className: classes.backdrop,\n    ownerState\n  });\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default ModalUnstyled;","map":{"version":3,"sources":["D:/ipfs/cluster-webui/.yarn/__virtual__/@mui-base-virtual-988448c64e/0/cache/@mui-base-npm-5.0.0-alpha.103-53af3ff7f9-beabe1be30.zip/node_modules/@mui/base/ModalUnstyled/ModalUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","elementAcceptingRef","HTMLElementType","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_createChainedFunction","createChainedFunction","unstable_useEventCallback","useEventCallback","composeClasses","Portal","ModalManager","ariaHidden","FocusTrap","getModalUtilityClass","useSlotProps","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","classes","slots","root","getContainer","container","getHasTransition","props","children","hasOwnProperty","defaultManager","ModalUnstyled","forwardRef","ref","_props$ariaHidden","_ref","classesProp","closeAfterTransition","component","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","onTransitionEnter","onTransitionExited","slotProps","other","setExited","useState","modal","useRef","mountNodeRef","modalRef","handleRef","hasTransition","ariaHiddenProp","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","childProps","tabIndex","undefined","onEnter","onExited","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","role","className","BackdropComponent","backdrop","backdropProps","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","isRequired","object","bool","oneOfType","func","shape"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"classes\", \"closeAfterTransition\", \"component\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport FocusTrap from '../FocusTrap';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  var _props$ariaHidden, _ref;\n\n  const {\n    children,\n    classes: classesProp,\n    closeAfterTransition = false,\n    component,\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    // eslint-disable-next-line react/prop-types\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open,\n\n    /* eslint-disable react/prop-types */\n    onTransitionEnter,\n    onTransitionExited,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleEnter = () => {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: handleRef,\n      role: 'presentation',\n      onKeyDown: handleKeyDown\n    },\n    className: classes.root,\n    ownerState\n  });\n  const BackdropComponent = slots.backdrop;\n  const backdropProps = useSlotProps({\n    elementType: BackdropComponent,\n    externalSlotProps: slotProps.backdrop,\n    additionalProps: {\n      'aria-hidden': true,\n      onClick: handleBackdropClick,\n      open\n    },\n    className: classes.backdrop,\n    ownerState\n  });\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default ModalUnstyled;"]},"metadata":{},"sourceType":"module"}
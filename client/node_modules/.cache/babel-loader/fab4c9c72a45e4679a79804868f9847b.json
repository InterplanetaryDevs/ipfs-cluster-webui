{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"component\", \"colSpan\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelId\", \"labelRowsPerPage\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"selectId\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, chainPropTypes, integerPropType } from '@mui/utils';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport isHostComponent from '../utils/isHostComponent';\nimport TablePaginationActionsUnstyled from './TablePaginationActionsUnstyled';\nimport { getTablePaginationUnstyledUtilityClass } from './tablePaginationUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultLabelDisplayedRows(_ref2) {\n  let {\n    from,\n    to,\n    count\n  } = _ref2;\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUnstyledUtilityClass, {});\n};\n/**\n * A pagination for tables.\n *\n * Demos:\n *\n * - [Unstyled table pagination](https://mui.com/base/react-table-pagination/)\n *\n * API:\n *\n * - [TablePaginationUnstyled API](https://mui.com/base/api/table-pagination-unstyled/)\n */\n\n\nconst TablePaginationUnstyled = /*#__PURE__*/React.forwardRef(function TablePaginationUnstyled(props, ref) {\n  var _ref, _slots$select, _slots$actions, _slots$menuItem, _slots$selectLabel, _slots$displayedRows, _slots$toolbar, _slots$spacer;\n\n  const {\n    component,\n    colSpan: colSpanProp,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelId: labelIdProp,\n    labelRowsPerPage = 'Rows per page:',\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    selectId: selectIdProp,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses();\n  let colSpan;\n\n  if (!component || component === 'td' || !isHostComponent(component)) {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  const selectId = useId(selectIdProp);\n  const labelId = useId(labelIdProp);\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'td';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      colSpan,\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Select = (_slots$select = slots.select) != null ? _slots$select : 'select';\n  const selectProps = useSlotProps({\n    elementType: Select,\n    externalSlotProps: slotProps.select,\n    additionalProps: {\n      value: rowsPerPage,\n      id: selectId,\n      onChange: e => onRowsPerPageChange && onRowsPerPageChange(e),\n      'aria-label': rowsPerPage.toString(),\n      'aria-labelledby': [labelId, selectId].filter(Boolean).join(' ') || undefined\n    },\n    ownerState,\n    className: classes.select\n  });\n  const Actions = (_slots$actions = slots.actions) != null ? _slots$actions : TablePaginationActionsUnstyled;\n  const actionsProps = useSlotProps({\n    elementType: Actions,\n    externalSlotProps: slotProps.actions,\n    additionalProps: {\n      page,\n      rowsPerPage,\n      count,\n      onPageChange,\n      getItemAriaLabel\n    },\n    ownerState,\n    className: classes.actions\n  });\n  const MenuItem = (_slots$menuItem = slots.menuItem) != null ? _slots$menuItem : 'option';\n  const menuItemProps = useSlotProps({\n    elementType: MenuItem,\n    externalSlotProps: slotProps.menuItem,\n    additionalProps: {\n      value: undefined\n    },\n    ownerState,\n    className: classes.menuItem\n  });\n  const SelectLabel = (_slots$selectLabel = slots.selectLabel) != null ? _slots$selectLabel : 'p';\n  const selectLabelProps = useSlotProps({\n    elementType: SelectLabel,\n    externalSlotProps: slotProps.selectLabel,\n    additionalProps: {\n      id: labelId\n    },\n    ownerState,\n    className: classes.selectLabel\n  });\n  const DisplayedRows = (_slots$displayedRows = slots.displayedRows) != null ? _slots$displayedRows : 'p';\n  const displayedRowsProps = useSlotProps({\n    elementType: DisplayedRows,\n    externalSlotProps: slotProps.displayedRows,\n    ownerState,\n    className: classes.displayedRows\n  });\n  const Toolbar = (_slots$toolbar = slots.toolbar) != null ? _slots$toolbar : 'div';\n  const toolbarProps = useSlotProps({\n    elementType: Toolbar,\n    externalSlotProps: slotProps.toolbar,\n    ownerState,\n    className: classes.toolbar\n  });\n  const Spacer = (_slots$spacer = slots.spacer) != null ? _slots$spacer : 'div';\n  const spacerProps = useSlotProps({\n    elementType: Spacer,\n    externalSlotProps: slotProps.spacer,\n    ownerState,\n    className: classes.spacer\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: /*#__PURE__*/_jsxs(Toolbar, _extends({}, toolbarProps, {\n      children: [/*#__PURE__*/_jsx(Spacer, _extends({}, spacerProps)), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(SelectLabel, _extends({}, selectLabelProps, {\n        children: labelRowsPerPage\n      })), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(Select, _extends({}, selectProps, {\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItem, _extends({}, menuItemProps, {\n          key: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(DisplayedRows, _extends({}, displayedRowsProps, {\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      })), /*#__PURE__*/_jsx(Actions, _extends({}, actionsProps))]\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Id of the label element within the pagination.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePaginationUnstyled is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Id of the select element within the pagination.\n   */\n  selectId: PropTypes.string,\n\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    displayedRows: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    menuItem: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    select: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    selectLabel: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    spacer: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    toolbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.elementType,\n    displayedRows: PropTypes.elementType,\n    menuItem: PropTypes.elementType,\n    root: PropTypes.elementType,\n    select: PropTypes.elementType,\n    selectLabel: PropTypes.elementType,\n    spacer: PropTypes.elementType,\n    toolbar: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationUnstyled;","map":{"version":3,"sources":["D:/ipfs/cluster-webui/.yarn/__virtual__/@mui-base-virtual-988448c64e/0/cache/@mui-base-npm-5.0.0-alpha.103-53af3ff7f9-beabe1be30.zip/node_modules/@mui/base/TablePaginationUnstyled/TablePaginationUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useId","useId","chainPropTypes","integerPropType","useSlotProps","composeClasses","isHostComponent","TablePaginationActionsUnstyled","getTablePaginationUnstyledUtilityClass","jsx","_jsx","createElement","_createElement","jsxs","_jsxs","defaultLabelDisplayedRows","from","to","count","defaultGetAriaLabel","type","useUtilityClasses","slots","root","toolbar","spacer","selectLabel","select","input","selectIcon","menuItem","displayedRows","actions","TablePaginationUnstyled","forwardRef","props","ref","_ref","_slots$select","_slots$actions","_slots$menuItem","_slots$selectLabel","_slots$displayedRows","_slots$toolbar","_slots$spacer","component","colSpan","colSpanProp","getItemAriaLabel","labelDisplayedRows","labelId","labelIdProp","labelRowsPerPage","onPageChange","onRowsPerPageChange","page","rowsPerPage","rowsPerPageOptions","selectId","selectIdProp","slotProps","other","ownerState","classes","getLabelDisplayedRowsTo","Math","min","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","className","Select","selectProps","value","id","onChange","e","toString","filter","Boolean","join","undefined","Actions","actionsProps","MenuItem","menuItemProps","SelectLabel","selectLabelProps","DisplayedRows","displayedRowsProps","Toolbar","toolbarProps","Spacer","spacerProps","children","length","map","rowsPerPageOption","key","label","process","env","NODE_ENV","propTypes","node","number","isRequired","func","string","newLastPage","max","ceil","Error","arrayOf","oneOfType","shape","object"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"component\", \"colSpan\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelId\", \"labelRowsPerPage\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"selectId\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, chainPropTypes, integerPropType } from '@mui/utils';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport isHostComponent from '../utils/isHostComponent';\nimport TablePaginationActionsUnstyled from './TablePaginationActionsUnstyled';\nimport { getTablePaginationUnstyledUtilityClass } from './tablePaginationUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUnstyledUtilityClass, {});\n};\n/**\n * A pagination for tables.\n *\n * Demos:\n *\n * - [Unstyled table pagination](https://mui.com/base/react-table-pagination/)\n *\n * API:\n *\n * - [TablePaginationUnstyled API](https://mui.com/base/api/table-pagination-unstyled/)\n */\n\n\nconst TablePaginationUnstyled = /*#__PURE__*/React.forwardRef(function TablePaginationUnstyled(props, ref) {\n  var _ref, _slots$select, _slots$actions, _slots$menuItem, _slots$selectLabel, _slots$displayedRows, _slots$toolbar, _slots$spacer;\n\n  const {\n    component,\n    colSpan: colSpanProp,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelId: labelIdProp,\n    labelRowsPerPage = 'Rows per page:',\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    selectId: selectIdProp,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses();\n  let colSpan;\n\n  if (!component || component === 'td' || !isHostComponent(component)) {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  const selectId = useId(selectIdProp);\n  const labelId = useId(labelIdProp);\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'td';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      colSpan,\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Select = (_slots$select = slots.select) != null ? _slots$select : 'select';\n  const selectProps = useSlotProps({\n    elementType: Select,\n    externalSlotProps: slotProps.select,\n    additionalProps: {\n      value: rowsPerPage,\n      id: selectId,\n      onChange: e => onRowsPerPageChange && onRowsPerPageChange(e),\n      'aria-label': rowsPerPage.toString(),\n      'aria-labelledby': [labelId, selectId].filter(Boolean).join(' ') || undefined\n    },\n    ownerState,\n    className: classes.select\n  });\n  const Actions = (_slots$actions = slots.actions) != null ? _slots$actions : TablePaginationActionsUnstyled;\n  const actionsProps = useSlotProps({\n    elementType: Actions,\n    externalSlotProps: slotProps.actions,\n    additionalProps: {\n      page,\n      rowsPerPage,\n      count,\n      onPageChange,\n      getItemAriaLabel\n    },\n    ownerState,\n    className: classes.actions\n  });\n  const MenuItem = (_slots$menuItem = slots.menuItem) != null ? _slots$menuItem : 'option';\n  const menuItemProps = useSlotProps({\n    elementType: MenuItem,\n    externalSlotProps: slotProps.menuItem,\n    additionalProps: {\n      value: undefined\n    },\n    ownerState,\n    className: classes.menuItem\n  });\n  const SelectLabel = (_slots$selectLabel = slots.selectLabel) != null ? _slots$selectLabel : 'p';\n  const selectLabelProps = useSlotProps({\n    elementType: SelectLabel,\n    externalSlotProps: slotProps.selectLabel,\n    additionalProps: {\n      id: labelId\n    },\n    ownerState,\n    className: classes.selectLabel\n  });\n  const DisplayedRows = (_slots$displayedRows = slots.displayedRows) != null ? _slots$displayedRows : 'p';\n  const displayedRowsProps = useSlotProps({\n    elementType: DisplayedRows,\n    externalSlotProps: slotProps.displayedRows,\n    ownerState,\n    className: classes.displayedRows\n  });\n  const Toolbar = (_slots$toolbar = slots.toolbar) != null ? _slots$toolbar : 'div';\n  const toolbarProps = useSlotProps({\n    elementType: Toolbar,\n    externalSlotProps: slotProps.toolbar,\n    ownerState,\n    className: classes.toolbar\n  });\n  const Spacer = (_slots$spacer = slots.spacer) != null ? _slots$spacer : 'div';\n  const spacerProps = useSlotProps({\n    elementType: Spacer,\n    externalSlotProps: slotProps.spacer,\n    ownerState,\n    className: classes.spacer\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: /*#__PURE__*/_jsxs(Toolbar, _extends({}, toolbarProps, {\n      children: [/*#__PURE__*/_jsx(Spacer, _extends({}, spacerProps)), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(SelectLabel, _extends({}, selectLabelProps, {\n        children: labelRowsPerPage\n      })), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(Select, _extends({}, selectProps, {\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItem, _extends({}, menuItemProps, {\n          key: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(DisplayedRows, _extends({}, displayedRowsProps, {\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      })), /*#__PURE__*/_jsx(Actions, _extends({}, actionsProps))]\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Id of the label element within the pagination.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePaginationUnstyled is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Id of the select element within the pagination.\n   */\n  selectId: PropTypes.string,\n\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    displayedRows: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    menuItem: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    select: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    selectLabel: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    spacer: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    toolbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.elementType,\n    displayedRows: PropTypes.elementType,\n    menuItem: PropTypes.elementType,\n    root: PropTypes.elementType,\n    select: PropTypes.elementType,\n    selectLabel: PropTypes.elementType,\n    spacer: PropTypes.elementType,\n    toolbar: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationUnstyled;"]},"metadata":{},"sourceType":"module"}
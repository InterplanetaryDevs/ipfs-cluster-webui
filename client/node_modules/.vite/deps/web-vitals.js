import "./chunk-J43GMYXM.js";

// ../.yarn/cache/web-vitals-npm-3.0.4-02a395af42-b618a8e049.zip/node_modules/web-vitals/dist/web-vitals.js
var e;
var n;
var t;
var r;
var i;
var a = -1;
var o = function(e3) {
  addEventListener("pageshow", function(n2) {
    n2.persisted && (a = n2.timeStamp, e3(n2));
  }, true);
};
var c = function() {
  return window.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0];
};
var u = function() {
  var e3 = c();
  return e3 && e3.activationStart || 0;
};
var f = function(e3, n2) {
  var t2 = c(), r2 = "navigate";
  return a >= 0 ? r2 = "back-forward-cache" : t2 && (r2 = document.prerendering || u() > 0 ? "prerender" : t2.type.replace(/_/g, "-")), { name: e3, value: void 0 === n2 ? -1 : n2, rating: "good", delta: 0, entries: [], id: "v3-".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12), navigationType: r2 };
};
var s = function(e3, n2, t2) {
  try {
    if (PerformanceObserver.supportedEntryTypes.includes(e3)) {
      var r2 = new PerformanceObserver(function(e4) {
        n2(e4.getEntries());
      });
      return r2.observe(Object.assign({ type: e3, buffered: true }, t2 || {})), r2;
    }
  } catch (e4) {
  }
};
var d = function(e3, n2) {
  var t2 = function t3(r2) {
    "pagehide" !== r2.type && "hidden" !== document.visibilityState || (e3(r2), n2 && (removeEventListener("visibilitychange", t3, true), removeEventListener("pagehide", t3, true)));
  };
  addEventListener("visibilitychange", t2, true), addEventListener("pagehide", t2, true);
};
var l = function(e3, n2, t2, r2) {
  var i2, a2;
  return function(o2) {
    n2.value >= 0 && (o2 || r2) && ((a2 = n2.value - (i2 || 0)) || void 0 === i2) && (i2 = n2.value, n2.delta = a2, n2.rating = function(e4, n3) {
      return e4 > n3[1] ? "poor" : e4 > n3[0] ? "needs-improvement" : "good";
    }(n2.value, t2), e3(n2));
  };
};
var p = -1;
var v = function() {
  return "hidden" !== document.visibilityState || document.prerendering ? 1 / 0 : 0;
};
var m = function() {
  d(function(e3) {
    var n2 = e3.timeStamp;
    p = n2;
  }, true);
};
var h = function() {
  return p < 0 && (p = v(), m(), o(function() {
    setTimeout(function() {
      p = v(), m();
    }, 0);
  })), { get firstHiddenTime() {
    return p;
  } };
};
var g = function(e3, n2) {
  n2 = n2 || {};
  var t2, r2 = [1800, 3e3], i2 = h(), a2 = f("FCP"), c2 = function(e4) {
    e4.forEach(function(e5) {
      "first-contentful-paint" === e5.name && (p2 && p2.disconnect(), e5.startTime < i2.firstHiddenTime && (a2.value = Math.max(e5.startTime - u(), 0), a2.entries.push(e5), t2(true)));
    });
  }, d2 = window.performance && window.performance.getEntriesByName && window.performance.getEntriesByName("first-contentful-paint")[0], p2 = d2 ? null : s("paint", c2);
  (d2 || p2) && (t2 = l(e3, a2, r2, n2.reportAllChanges), d2 && c2([d2]), o(function(i3) {
    a2 = f("FCP"), t2 = l(e3, a2, r2, n2.reportAllChanges), requestAnimationFrame(function() {
      requestAnimationFrame(function() {
        a2.value = performance.now() - i3.timeStamp, t2(true);
      });
    });
  }));
};
var y = false;
var T = -1;
var E = function(e3, n2) {
  n2 = n2 || {};
  var t2 = [0.1, 0.25];
  y || (g(function(e4) {
    T = e4.value;
  }), y = true);
  var r2, i2 = function(n3) {
    T > -1 && e3(n3);
  }, a2 = f("CLS", 0), c2 = 0, u2 = [], p2 = function(e4) {
    e4.forEach(function(e5) {
      if (!e5.hadRecentInput) {
        var n3 = u2[0], t3 = u2[u2.length - 1];
        c2 && e5.startTime - t3.startTime < 1e3 && e5.startTime - n3.startTime < 5e3 ? (c2 += e5.value, u2.push(e5)) : (c2 = e5.value, u2 = [e5]), c2 > a2.value && (a2.value = c2, a2.entries = u2, r2());
      }
    });
  }, v2 = s("layout-shift", p2);
  v2 && (r2 = l(i2, a2, t2, n2.reportAllChanges), d(function() {
    p2(v2.takeRecords()), r2(true);
  }), o(function() {
    c2 = 0, T = -1, a2 = f("CLS", 0), r2 = l(i2, a2, t2, n2.reportAllChanges);
  }));
};
var w = { passive: true, capture: true };
var C = new Date();
var L = function(r2, i2) {
  e || (e = i2, n = r2, t = new Date(), A(removeEventListener), S());
};
var S = function() {
  if (n >= 0 && n < t - C) {
    var i2 = { entryType: "first-input", name: e.type, target: e.target, cancelable: e.cancelable, startTime: e.timeStamp, processingStart: e.timeStamp + n };
    r.forEach(function(e3) {
      e3(i2);
    }), r = [];
  }
};
var b = function(e3) {
  if (e3.cancelable) {
    var n2 = (e3.timeStamp > 1e12 ? new Date() : performance.now()) - e3.timeStamp;
    "pointerdown" == e3.type ? function(e4, n3) {
      var t2 = function() {
        L(e4, n3), i2();
      }, r2 = function() {
        i2();
      }, i2 = function() {
        removeEventListener("pointerup", t2, w), removeEventListener("pointercancel", r2, w);
      };
      addEventListener("pointerup", t2, w), addEventListener("pointercancel", r2, w);
    }(n2, e3) : L(n2, e3);
  }
};
var A = function(e3) {
  ["mousedown", "keydown", "touchstart", "pointerdown"].forEach(function(n2) {
    return e3(n2, b, w);
  });
};
var F = function(t2, i2) {
  i2 = i2 || {};
  var a2, c2 = [100, 300], u2 = h(), p2 = f("FID"), v2 = function(e3) {
    e3.startTime < u2.firstHiddenTime && (p2.value = e3.processingStart - e3.startTime, p2.entries.push(e3), a2(true));
  }, m2 = function(e3) {
    e3.forEach(v2);
  }, g2 = s("first-input", m2);
  a2 = l(t2, p2, c2, i2.reportAllChanges), g2 && d(function() {
    m2(g2.takeRecords()), g2.disconnect();
  }, true), g2 && o(function() {
    var o2;
    p2 = f("FID"), a2 = l(t2, p2, c2, i2.reportAllChanges), r = [], n = -1, e = null, A(addEventListener), o2 = v2, r.push(o2), S();
  });
};
var I = 0;
var P = 1 / 0;
var M = 0;
var k = function(e3) {
  e3.forEach(function(e4) {
    e4.interactionId && (P = Math.min(P, e4.interactionId), M = Math.max(M, e4.interactionId), I = M ? (M - P) / 7 + 1 : 0);
  });
};
var B = function() {
  return i ? I : performance.interactionCount || 0;
};
var D = function() {
  "interactionCount" in performance || i || (i = s("event", k, { type: "event", buffered: true, durationThreshold: 0 }));
};
var x = 0;
var N = function() {
  return B() - x;
};
var R = [];
var q = {};
var H = function(e3) {
  var n2 = R[R.length - 1], t2 = q[e3.interactionId];
  if (t2 || R.length < 10 || e3.duration > n2.latency) {
    if (t2)
      t2.entries.push(e3), t2.latency = Math.max(t2.latency, e3.duration);
    else {
      var r2 = { id: e3.interactionId, latency: e3.duration, entries: [e3] };
      q[r2.id] = r2, R.push(r2);
    }
    R.sort(function(e4, n3) {
      return n3.latency - e4.latency;
    }), R.splice(10).forEach(function(e4) {
      delete q[e4.id];
    });
  }
};
var O = function(e3, n2) {
  n2 = n2 || {};
  var t2 = [200, 500];
  D();
  var r2, i2 = f("INP"), a2 = function(e4) {
    e4.forEach(function(e5) {
      (e5.interactionId && H(e5), "first-input" === e5.entryType) && (!R.some(function(n4) {
        return n4.entries.some(function(n5) {
          return e5.duration === n5.duration && e5.startTime === n5.startTime;
        });
      }) && H(e5));
    });
    var n3, t3 = (n3 = Math.min(R.length - 1, Math.floor(N() / 50)), R[n3]);
    t3 && t3.latency !== i2.value && (i2.value = t3.latency, i2.entries = t3.entries, r2());
  }, c2 = s("event", a2, { durationThreshold: n2.durationThreshold || 40 });
  r2 = l(e3, i2, t2, n2.reportAllChanges), c2 && (c2.observe({ type: "first-input", buffered: true }), d(function() {
    a2(c2.takeRecords()), i2.value < 0 && N() > 0 && (i2.value = 0, i2.entries = []), r2(true);
  }), o(function() {
    R = [], x = B(), i2 = f("INP"), r2 = l(e3, i2, t2, n2.reportAllChanges);
  }));
};
var j = {};
var _ = function(e3, n2) {
  n2 = n2 || {};
  var t2, r2 = [2500, 4e3], i2 = h(), a2 = f("LCP"), c2 = function(e4) {
    var n3 = e4[e4.length - 1];
    if (n3) {
      var r3 = Math.max(n3.startTime - u(), 0);
      r3 < i2.firstHiddenTime && (a2.value = r3, a2.entries = [n3], t2());
    }
  }, p2 = s("largest-contentful-paint", c2);
  if (p2) {
    t2 = l(e3, a2, r2, n2.reportAllChanges);
    var v2 = function() {
      j[a2.id] || (c2(p2.takeRecords()), p2.disconnect(), j[a2.id] = true, t2(true));
    };
    ["keydown", "click"].forEach(function(e4) {
      addEventListener(e4, v2, { once: true, capture: true });
    }), d(v2, true), o(function(i3) {
      a2 = f("LCP"), t2 = l(e3, a2, r2, n2.reportAllChanges), requestAnimationFrame(function() {
        requestAnimationFrame(function() {
          a2.value = performance.now() - i3.timeStamp, j[a2.id] = true, t2(true);
        });
      });
    });
  }
};
var z = function e2(n2) {
  document.prerendering ? addEventListener("prerenderingchange", function() {
    return e2(n2);
  }, true) : "complete" !== document.readyState ? addEventListener("load", function() {
    return e2(n2);
  }, true) : setTimeout(n2, 0);
};
var G = function(e3, n2) {
  n2 = n2 || {};
  var t2 = [800, 1800], r2 = f("TTFB"), i2 = l(e3, r2, t2, n2.reportAllChanges);
  z(function() {
    var a2 = c();
    if (a2) {
      if (r2.value = Math.max(a2.responseStart - u(), 0), r2.value < 0 || r2.value > performance.now())
        return;
      r2.entries = [a2], i2(true), o(function() {
        r2 = f("TTFB", 0), (i2 = l(e3, r2, t2, n2.reportAllChanges))(true);
      });
    }
  });
};
export {
  E as getCLS,
  g as getFCP,
  F as getFID,
  O as getINP,
  _ as getLCP,
  G as getTTFB,
  E as onCLS,
  g as onFCP,
  F as onFID,
  O as onINP,
  _ as onLCP,
  G as onTTFB
};
//# sourceMappingURL=web-vitals.js.map
